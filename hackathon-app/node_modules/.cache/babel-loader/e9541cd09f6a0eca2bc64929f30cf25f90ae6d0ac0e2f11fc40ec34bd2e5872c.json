{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hackathon\\\\hackathon-app\\\\src\\\\components\\\\RoadmapChecklist.jsx\";\n// // import { useMemo } from 'react';\n\n// // function progress(checked, items) {\n// //   const total = items.length;\n// //   const done = items.filter(it => checked[it.id]).length;\n// //   return { total, done, pct: Math.round((done / (total || 1)) * 100) };\n// // }\n\n// // export default function RoadmapChecklist({ roadmap, checked, onToggle, onExport, onImport }) {\n// //   const flatItems = useMemo(() => roadmap.categories.flatMap(c => c.items), [roadmap]);\n// //   const { total, done, pct } = progress(checked, flatItems);\n\n// //   return (\n// //     <div style={{ marginTop: 24 }}>\n// //       <h3>{roadmap.goal}</h3>\n// //       <p>Estimated timeframe: {roadmap.timeframe_months} months</p>\n// //       <p><strong>{done}/{total}</strong> completed ({pct}%).</p>\n\n// //       <div style={{ display: 'flex', gap: 8, margin: '8px 0' }}>\n// //         <button onClick={onExport}>Export (JSON)</button>\n// //         <label style={{ display: 'inline-flex', alignItems: 'center', gap: 8, cursor: 'pointer' }}>\n// //           <input type=\"file\" accept=\"application/json\" onChange={onImport} style={{ display: 'none' }} />\n// //           <span>Import (JSON)</span>\n// //         </label>\n// //       </div>\n\n// //       {roadmap.categories.map(cat => (\n// //         <div key={cat.name} className=\"card\" style={{ padding: 16, margin: '16px 0' }}>\n// //           <h4>{cat.name}</h4>\n// //           <ul style={{ paddingLeft: 0 }}>\n// //             {cat.items.map(it => (\n// //               <li key={it.id} style={{ listStyle: 'none', margin: '8px 0' }}>\n// //                 <label>\n// //                   <input\n// //                     type=\"checkbox\"\n// //                     checked={!!checked[it.id]}\n// //                     onChange={() => onToggle(it.id)}\n// //                   />\n// //                   <span style={{ marginLeft: 8 }}>{it.label}</span>\n// //                   <span style={{ marginLeft: 8, opacity: 0.6 }}>({it.type})</span>\n// //                 </label>\n// //               </li>\n// //             ))}\n// //           </ul>\n// //         </div>\n// //       ))}\n// //     </div>\n// //   );\n// // }\n\n// import { useMemo } from 'react';\n// import './roadmap-checklist.css';\n\n// function calcProgress(checked, categories) {\n//   const items = categories.flatMap(c => c.items);\n//   const total = items.length;\n//   const done = items.filter(it => checked[it.id]).length;\n//   return { total, done, pct: Math.round((done / (total || 1)) * 100) };\n// }\n\n// /**\n//  * 예시 디자인과 동일하게 보이도록 만든 체크리스트\n//  * props:\n//  *  - roadmap: { categories: [{ name, items:[{id,label,type}]}] }\n//  *  - checked: { [id]: boolean }\n//  *  - onToggle(id)\n//  *  - onExport(), onImport(e)\n//  */\n// export default function RoadmapChecklist({ roadmap, checked, onToggle, onExport, onImport }) {\n//   const categories = roadmap?.categories ?? [];\n//   const { total, done, pct } = useMemo(\n//     () => calcProgress(checked, categories),\n//     [checked, categories]\n//   );\n\n//   // 예시처럼 큰 레벨 숫자(6,5,4...)가 필요하므로, 배열 길이 기준으로 역순 번호 부여\n//   const numbered = useMemo(() => {\n//     const n = categories.length;\n//     return categories.map((c, i) => ({\n//       ...c,\n//       level: n - i, // 6,5,4...\n//     }));\n//   }, [categories]);\n\n//   return (\n//     <div className=\"rc-wrap\">\n//       {/* 상단 우측에 진행률(예: 0% Complete) — 필요 시 노출 */}\n//       <div className=\"rc-head\">\n//         <div />\n//         <div className=\"rc-progress\">\n//           <div className=\"rc-progress-num\">{pct}%</div>\n//           <div className=\"rc-progress-sub\">Complete</div>\n//         </div>\n//       </div>\n\n//       <div className=\"rc-grid\">\n//         {numbered.map((cat) => (\n//           // <section key={cat.name} className=\"gs-card rc-card\">\n//           <div key={cat.name} className=\"rc-card\">\n//             <div className=\"rc-card-head\">\n//               <div className=\"rc-level\">{cat.level}</div>\n//               <div className=\"rc-title\">{cat.name}</div>\n//             </div>\n\n//             <ul className=\"rc-list\">\n//               {cat.items.map((it) => (\n//                 <li key={it.id} className=\"rc-item\">\n//                   <label className=\"rc-check\">\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={!!checked[it.id]}\n//                       onChange={() => onToggle(it.id)}\n//                     />\n//                     <span className=\"rc-box\" aria-hidden=\"true\" />\n//                     <span className=\"rc-label\">{it.label}</span>\n//                   </label>\n//                 </li>\n//               ))}\n//             </ul>\n//           {/* </section> */}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* (선택) 내보내기/가져오기 툴바 — 기존 예시 UI와 톤 맞춤 */}\n//       <div className=\"rc-toolbar\">\n//         <button type=\"button\" className=\"btn-outline\" onClick={onExport}>Export (JSON)</button>\n//         <label className=\"btn-outline rc-import\">\n//           Import (JSON)\n//           <input type=\"file\" accept=\"application/json\" onChange={onImport} />\n//         </label>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoadmapChecklist({\n  roadmap,\n  checked,\n  onToggle,\n  showProgress = true\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (roadmap.categories || []).map((category, idx) => {\n      var _category$items, _category$items2, _category$items3;\n      const total = ((_category$items = category.items) === null || _category$items === void 0 ? void 0 : _category$items.length) || 0;\n      const done = ((_category$items2 = category.items) === null || _category$items2 === void 0 ? void 0 : _category$items2.reduce((s, it) => s + (checked[it.id] ? 1 : 0), 0)) || 0;\n      const pct = total ? Math.round(done / total * 100) : 0;\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          border: '1px solid #E5E7EB',\n          borderRadius: 12,\n          padding: 16,\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: 0,\n              fontSize: 20,\n              fontWeight: 800\n            },\n            children: category.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), showProgress && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 800\n              },\n              children: [pct, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 12,\n                color: '#6B7280'\n              },\n              children: \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_category$items3 = category.items) === null || _category$items3 === void 0 ? void 0 : _category$items3.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 12,\n              padding: '8px 4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !!checked[item.id],\n              onChange: () => onToggle(item.id),\n              style: {\n                width: 18,\n                height: 18\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_c = RoadmapChecklist;\nvar _c;\n$RefreshReg$(_c, \"RoadmapChecklist\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RoadmapChecklist","roadmap","checked","onToggle","showProgress","children","categories","map","category","idx","_category$items","_category$items2","_category$items3","total","items","length","done","reduce","s","it","id","pct","Math","round","style","border","borderRadius","padding","marginBottom","display","justifyContent","alignItems","margin","fontSize","fontWeight","title","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","color","item","gap","type","onChange","width","height","text","_c","$RefreshReg$"],"sources":["D:/Hackathon/hackathon-app/src/components/RoadmapChecklist.jsx"],"sourcesContent":["// // import { useMemo } from 'react';\r\n\r\n// // function progress(checked, items) {\r\n// //   const total = items.length;\r\n// //   const done = items.filter(it => checked[it.id]).length;\r\n// //   return { total, done, pct: Math.round((done / (total || 1)) * 100) };\r\n// // }\r\n\r\n// // export default function RoadmapChecklist({ roadmap, checked, onToggle, onExport, onImport }) {\r\n// //   const flatItems = useMemo(() => roadmap.categories.flatMap(c => c.items), [roadmap]);\r\n// //   const { total, done, pct } = progress(checked, flatItems);\r\n\r\n// //   return (\r\n// //     <div style={{ marginTop: 24 }}>\r\n// //       <h3>{roadmap.goal}</h3>\r\n// //       <p>Estimated timeframe: {roadmap.timeframe_months} months</p>\r\n// //       <p><strong>{done}/{total}</strong> completed ({pct}%).</p>\r\n\r\n// //       <div style={{ display: 'flex', gap: 8, margin: '8px 0' }}>\r\n// //         <button onClick={onExport}>Export (JSON)</button>\r\n// //         <label style={{ display: 'inline-flex', alignItems: 'center', gap: 8, cursor: 'pointer' }}>\r\n// //           <input type=\"file\" accept=\"application/json\" onChange={onImport} style={{ display: 'none' }} />\r\n// //           <span>Import (JSON)</span>\r\n// //         </label>\r\n// //       </div>\r\n\r\n// //       {roadmap.categories.map(cat => (\r\n// //         <div key={cat.name} className=\"card\" style={{ padding: 16, margin: '16px 0' }}>\r\n// //           <h4>{cat.name}</h4>\r\n// //           <ul style={{ paddingLeft: 0 }}>\r\n// //             {cat.items.map(it => (\r\n// //               <li key={it.id} style={{ listStyle: 'none', margin: '8px 0' }}>\r\n// //                 <label>\r\n// //                   <input\r\n// //                     type=\"checkbox\"\r\n// //                     checked={!!checked[it.id]}\r\n// //                     onChange={() => onToggle(it.id)}\r\n// //                   />\r\n// //                   <span style={{ marginLeft: 8 }}>{it.label}</span>\r\n// //                   <span style={{ marginLeft: 8, opacity: 0.6 }}>({it.type})</span>\r\n// //                 </label>\r\n// //               </li>\r\n// //             ))}\r\n// //           </ul>\r\n// //         </div>\r\n// //       ))}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n\r\n// import { useMemo } from 'react';\r\n// import './roadmap-checklist.css';\r\n\r\n// function calcProgress(checked, categories) {\r\n//   const items = categories.flatMap(c => c.items);\r\n//   const total = items.length;\r\n//   const done = items.filter(it => checked[it.id]).length;\r\n//   return { total, done, pct: Math.round((done / (total || 1)) * 100) };\r\n// }\r\n\r\n// /**\r\n//  * 예시 디자인과 동일하게 보이도록 만든 체크리스트\r\n//  * props:\r\n//  *  - roadmap: { categories: [{ name, items:[{id,label,type}]}] }\r\n//  *  - checked: { [id]: boolean }\r\n//  *  - onToggle(id)\r\n//  *  - onExport(), onImport(e)\r\n//  */\r\n// export default function RoadmapChecklist({ roadmap, checked, onToggle, onExport, onImport }) {\r\n//   const categories = roadmap?.categories ?? [];\r\n//   const { total, done, pct } = useMemo(\r\n//     () => calcProgress(checked, categories),\r\n//     [checked, categories]\r\n//   );\r\n\r\n//   // 예시처럼 큰 레벨 숫자(6,5,4...)가 필요하므로, 배열 길이 기준으로 역순 번호 부여\r\n//   const numbered = useMemo(() => {\r\n//     const n = categories.length;\r\n//     return categories.map((c, i) => ({\r\n//       ...c,\r\n//       level: n - i, // 6,5,4...\r\n//     }));\r\n//   }, [categories]);\r\n\r\n//   return (\r\n//     <div className=\"rc-wrap\">\r\n//       {/* 상단 우측에 진행률(예: 0% Complete) — 필요 시 노출 */}\r\n//       <div className=\"rc-head\">\r\n//         <div />\r\n//         <div className=\"rc-progress\">\r\n//           <div className=\"rc-progress-num\">{pct}%</div>\r\n//           <div className=\"rc-progress-sub\">Complete</div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"rc-grid\">\r\n//         {numbered.map((cat) => (\r\n//           // <section key={cat.name} className=\"gs-card rc-card\">\r\n//           <div key={cat.name} className=\"rc-card\">\r\n//             <div className=\"rc-card-head\">\r\n//               <div className=\"rc-level\">{cat.level}</div>\r\n//               <div className=\"rc-title\">{cat.name}</div>\r\n//             </div>\r\n\r\n//             <ul className=\"rc-list\">\r\n//               {cat.items.map((it) => (\r\n//                 <li key={it.id} className=\"rc-item\">\r\n//                   <label className=\"rc-check\">\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={!!checked[it.id]}\r\n//                       onChange={() => onToggle(it.id)}\r\n//                     />\r\n//                     <span className=\"rc-box\" aria-hidden=\"true\" />\r\n//                     <span className=\"rc-label\">{it.label}</span>\r\n//                   </label>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           {/* </section> */}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* (선택) 내보내기/가져오기 툴바 — 기존 예시 UI와 톤 맞춤 */}\r\n//       <div className=\"rc-toolbar\">\r\n//         <button type=\"button\" className=\"btn-outline\" onClick={onExport}>Export (JSON)</button>\r\n//         <label className=\"btn-outline rc-import\">\r\n//           Import (JSON)\r\n//           <input type=\"file\" accept=\"application/json\" onChange={onImport} />\r\n//         </label>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React from 'react';\r\n\r\nexport default function RoadmapChecklist({\r\n  roadmap,\r\n  checked,\r\n  onToggle,\r\n  showProgress = true\r\n}) {\r\n  return (\r\n    <div>\r\n      {(roadmap.categories || []).map((category, idx) => {\r\n        const total = category.items?.length || 0;\r\n        const done = category.items?.reduce((s, it) => s + (checked[it.id] ? 1 : 0), 0) || 0;\r\n        const pct = total ? Math.round((done / total) * 100) : 0;\r\n\r\n        return (\r\n          <section\r\n            key={idx}\r\n            style={{\r\n              border: '1px solid #E5E7EB',\r\n              borderRadius: 12,\r\n              padding: 16,\r\n              marginBottom: 16\r\n            }}\r\n          >\r\n            {/* 카테고리 헤더 */}\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                marginBottom: 12\r\n              }}\r\n            >\r\n              <h3 style={{ margin: 0, fontSize: 20, fontWeight: 800 }}>\r\n                {category.title}\r\n              </h3>\r\n\r\n              {showProgress && (\r\n                <div style={{ textAlign: 'right' }}>\r\n                  <div style={{ fontWeight: 800 }}>{pct}%</div>\r\n                  <div style={{ fontSize: 12, color: '#6B7280' }}>Complete</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* 체크리스트 아이템 */}\r\n            <div>\r\n              {category.items?.map((item) => (\r\n                <label\r\n                  key={item.id}\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: 12,\r\n                    padding: '8px 4px'\r\n                  }}\r\n                >\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!checked[item.id]}\r\n                    onChange={() => onToggle(item.id)}\r\n                    style={{ width: 18, height: 18 }}\r\n                  />\r\n                  <span>{item.text}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </section>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,gBAAgBA,CAAC;EACvCC,OAAO;EACPC,OAAO;EACPC,QAAQ;EACRC,YAAY,GAAG;AACjB,CAAC,EAAE;EACD,oBACEL,OAAA;IAAAM,QAAA,EACG,CAACJ,OAAO,CAACK,UAAU,IAAI,EAAE,EAAEC,GAAG,CAAC,CAACC,QAAQ,EAAEC,GAAG,KAAK;MAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;MACjD,MAAMC,KAAK,GAAG,EAAAH,eAAA,GAAAF,QAAQ,CAACM,KAAK,cAAAJ,eAAA,uBAAdA,eAAA,CAAgBK,MAAM,KAAI,CAAC;MACzC,MAAMC,IAAI,GAAG,EAAAL,gBAAA,GAAAH,QAAQ,CAACM,KAAK,cAAAH,gBAAA,uBAAdA,gBAAA,CAAgBM,MAAM,CAAC,CAACC,CAAC,EAAEC,EAAE,KAAKD,CAAC,IAAIhB,OAAO,CAACiB,EAAE,CAACC,EAAE,CAAC,GAAG,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}