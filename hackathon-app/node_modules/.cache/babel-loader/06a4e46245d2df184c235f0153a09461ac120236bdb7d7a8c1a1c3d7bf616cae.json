{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hackathon\\\\hackathon-app\\\\src\\\\pages\\\\AddGoals.js\",\n  _s = $RefreshSig$();\n// import { useState, useMemo } from 'react';\n// import { getRoadmap } from '../services/roadmapApi';\n// import RoadmapChecklist from '../components/RoadmapChecklist';\n// import { useNavigate } from 'react-router-dom';\n// import Steps from '../components/Steps';\n\n// export default function AddGoals(){\n//   const navigate = useNavigate();\n//   const [goal, setGoal] = useState('Develop AI-powered interactive storytelling platform');\n\n//   const handleContinue = () => {\n//     // pass goal forward to the next step\n//     navigate('/add_goals/previous_knowledge', { state: { goal } });\n//   };\n\n//   return (\n//     <div className=\"gs-page\">\n//       <main className=\"gs-container\">\n//         {/* Steps progress (Your Goal active) */}\n//         <Steps active={1} />\n\n//         {/* Title & subtitle */}\n//         <header className=\"gs-hero\">\n//           <h1>What’s Your <span style={{color:'var(--brand)'}}>Visionary Goal</span>?</h1>\n//           <p className=\"gs-sub\">Tell us your visionary goal — where do you want your story or career to be in the future?</p>\n//           <p className=\"gs-sub\" style={{marginTop:4}}>Dream big! We’ll help you create a personalized roadmap to turn your vision into reality.</p>\n//         </header>\n\n//         {/* Goal input card */}\n//         <section className=\"gs-card\" style={{maxWidth:940}}>\n//           <label style={{display:'block', fontSize:13, fontWeight:700, marginBottom:8}}>Your Main Goal</label>\n//           <textarea\n//             value={goal}\n//             onChange={(e)=> setGoal(e.target.value)}\n//             rows={3}\n//             placeholder=\"Describe your main goal here...\"\n//             style={{\n//               width:'100%', padding:'14px 12px', border:'1px solid var(--border)', borderRadius:12,\n//               background:'#fff', fontSize:14, resize:'vertical'\n//             }}\n//           />\n//         </section>\n\n//         {/* Actions */}\n//         <div className=\"gs-actions\" style={{marginTop:24}}>\n//           <button type=\"button\" className=\"btn-outline\">Save Draft</button>\n//           <button type=\"button\" className=\"btn-primary\" onClick={handleContinue}>\n//             Continue to Knowledge\n//           </button>\n//         </div>\n//       </main>\n//     </div>\n//   );\n// }\n\n// import { useState, useMemo } from 'react';\n// import { getRoadmap } from '../services/roadmapApi';\n// import RoadmapChecklist from '../components/RoadmapChecklist';\n// import { useNavigate } from 'react-router-dom';\n// import Steps from '../components/Steps';\n\n// export default function AddGoals() {\n//   const navigate = useNavigate();\n\n//   // Goal 입력\n//   const [goal, setGoal] = useState('Develop AI-powered interactive storytelling platform');\n\n//   // AI Checklist 상태\n//   const [loading, setLoading] = useState(false);\n//   const [roadmap, setRoadmap] = useState(null);\n//   const [checked, setChecked] = useState({});\n\n//   // 로컬 스토리지 키 생성\n//   function hashGoal(s) {\n//     let h = 0; for (let i = 0; i < s.length; i++) h = (h * 31 + s.charCodeAt(i)) | 0;\n//     return String(h);\n//   }\n//   const storageKey = useMemo(() => `roadmapChecks::${hashGoal(goal.trim())}`, [goal]);\n\n//   const loadChecks = () => {\n//     try { return JSON.parse(localStorage.getItem(storageKey) || '{}'); }\n//     catch { return {}; }\n//   };\n//   const saveChecks = (obj) => {\n//     localStorage.setItem(storageKey, JSON.stringify(obj));\n//   };\n\n//   // AI Checklist 생성\n//   const onGenerate = async () => {\n//     if (!goal.trim()) return;\n//     setLoading(true);\n//     try {\n//       const data = await getRoadmap(goal.trim());\n//       setRoadmap(data);\n//       setChecked(loadChecks());\n//     } catch (e) {\n//       alert(e.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // 체크 상태 토글\n//   const onToggle = (id) => {\n//     const next = { ...checked, [id]: !checked[id] };\n//     setChecked(next);\n//     saveChecks(next);\n//   };\n\n//   // Export / Import\n//   const onExport = () => {\n//     const blob = new Blob([JSON.stringify({ goal, roadmap, checked }, null, 2)], { type: 'application/json' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.download = `roadmap-${hashGoal(goal.trim())}.json`;\n//     a.href = url;\n//     a.click();\n//     URL.revokeObjectURL(url);\n//   };\n\n//   const onImport = async (e) => {\n//     const file = e.target.files?.[0];\n//     if (!file) return;\n//     const text = await file.text();\n//     try {\n//       const data = JSON.parse(text);\n//       if (!data.roadmap || !data.checked) throw new Error('Invalid file');\n//       setGoal(data.goal || '');\n//       setRoadmap(data.roadmap);\n//       setChecked(data.checked);\n//     } catch {\n//       alert('Invalid JSON file.');\n//     }\n//   };\n\n//   const handleContinue = () => {\n//     navigate('/add_goals/previous_knowledge', {\n//       state: { goal, roadmap, checked }\n//      });\n//   };\n\n//   return (\n//     <div className=\"gs-page\">\n//       <main className=\"gs-container\">\n//         {/* Steps progress (Your Goal active) */}\n//         <Steps active={1} />\n\n//         {/* Title & subtitle */}\n//         <header className=\"gs-hero\">\n//           <h1>What’s Your <span style={{color:'var(--brand)'}}>Visionary Goal</span>?</h1>\n//           <p className=\"gs-sub\">Tell us your visionary goal — where do you want your story or career to be in the future?</p>\n//           <p className=\"gs-sub\" style={{marginTop:4}}>Dream big! We’ll help you create a personalized roadmap to turn your vision into reality.</p>\n//         </header>\n\n//         {/* Goal input card */}\n//         <section className=\"gs-card\" style={{maxWidth:940}}>\n//           <label style={{display:'block', fontSize:13, fontWeight:700, marginBottom:8}}>Your Main Goal</label>\n//           <textarea\n//             value={goal}\n//             onChange={(e)=> setGoal(e.target.value)}\n//             rows={3}\n//             placeholder=\"Describe your main goal here...\"\n//             style={{\n//               width:'100%', padding:'14px 12px', border:'1px solid var(--border)', borderRadius:12,\n//               background:'#fff', fontSize:14, resize:'vertical'\n//             }}\n//           />\n//         </section>\n\n//         {/* AI Checklist Actions */}\n//         <div style={{ marginTop: 16, display: 'flex', gap: 8 }}>\n//           <button type=\"button\" className=\"btn-outline\" onClick={onGenerate} disabled={loading}>\n//             {loading ? 'Generating…' : 'Generate Checklist'}\n//           </button>\n//         </div>\n\n//         {roadmap && (\n//           <RoadmapChecklist\n//             roadmap={roadmap}\n//             checked={checked}\n//             onToggle={onToggle}\n//             onExport={onExport}\n//             onImport={onImport}\n//           />\n//         )}\n\n//         {/* Actions */}\n//         <div className=\"gs-actions\" style={{marginTop:24}}>\n//           <button type=\"button\" className=\"btn-outline\">Save Draft</button>\n//           <button type=\"button\" className=\"btn-primary\" onClick={handleContinue}>\n//             Continue to Knowledge\n//           </button>\n//         </div>\n//       </main>\n//     </div>\n//   );\n// }\n\nimport { useState, useMemo } from 'react';\nimport { getRoadmap } from '../services/roadmapApi';\nimport RoadmapChecklist from '../components/RoadmapChecklist';\nimport { useNavigate } from 'react-router-dom';\nimport Steps from '../components/Steps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddGoals() {\n  _s();\n  const navigate = useNavigate();\n  const [goal, setGoal] = useState('Develop AI-powered interactive storytelling platform');\n  const [loading, setLoading] = useState(false); // 생성 중 표시\n  const [roadmap, setRoadmap] = useState(null);\n  const [checked, setChecked] = useState({});\n\n  // goal 기반 로컬 스토리지 키\n  function hashGoal(s) {\n    let h = 0;\n    for (let i = 0; i < s.length; i++) h = h * 31 + s.charCodeAt(i) | 0;\n    return String(h);\n  }\n  const storageKey = useMemo(() => `roadmapChecks::${hashGoal(goal.trim())}`, [goal]);\n  const loadChecks = () => {\n    try {\n      return JSON.parse(localStorage.getItem(storageKey) || '{}');\n    } catch {\n      return {};\n    }\n  };\n  const saveChecks = obj => {\n    localStorage.setItem(storageKey, JSON.stringify(obj));\n  };\n\n  // 공통: 생성하고 상태/로컬스토리지까지 반영\n  const generateAndPersist = async () => {\n    const g = goal.trim();\n    if (!g) throw new Error('Please enter your goal.');\n    setLoading(true);\n    try {\n      const data = await getRoadmap(g);\n      const restored = loadChecks();\n      setRoadmap(data);\n      setChecked(restored);\n      localStorage.setItem('lastRoadmap', JSON.stringify({\n        goal: g,\n        roadmap: data,\n        checked: restored\n      }));\n      return data;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // (선택) 수동 생성 버튼 핸들러\n  const onGenerate = async () => {\n    try {\n      await generateAndPersist();\n    } catch (e) {\n      alert(e.message || 'Failed to generate.');\n    }\n  };\n\n  // 체크 토글 → 상태 & lastRoadmap 동기화\n  const onToggle = id => {\n    const next = {\n      ...checked,\n      [id]: !checked[id]\n    };\n    setChecked(next);\n    saveChecks(next);\n    localStorage.setItem('lastRoadmap', JSON.stringify({\n      goal,\n      roadmap,\n      checked: next\n    }));\n  };\n\n  // 내보내기/가져오기(선택)\n  const onExport = () => {\n    const blob = new Blob([JSON.stringify({\n      goal,\n      roadmap,\n      checked\n    }, null, 2)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.download = `roadmap-${hashGoal(goal.trim())}.json`;\n    a.href = url;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const onImport = async e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const text = await file.text();\n    try {\n      const data = JSON.parse(text);\n      if (!data.roadmap || !data.checked) throw new Error('Invalid file');\n      setGoal(data.goal || '');\n      setRoadmap(data.roadmap);\n      setChecked(data.checked);\n      localStorage.setItem('lastRoadmap', JSON.stringify(data));\n    } catch {\n      alert('Invalid JSON file.');\n    }\n  };\n\n  // ✅ 자동 생성 후 이동\n  const handleContinue = async () => {\n    try {\n      if (!roadmap) {\n        await generateAndPersist(); // 없으면 자동 생성\n      }\n      navigate('/add_goals/previous_knowledge'); // Knowledge 페이지\n    } catch (e) {\n      alert(e.message || 'Failed to generate checklist. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gs-page\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"gs-container\",\n      children: [/*#__PURE__*/_jsxDEV(Steps, {\n        active: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"gs-hero\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"What\\u2019s Your \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'var(--brand)'\n            },\n            children: \"Visionary Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 27\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"gs-sub\",\n          children: \"Tell us your visionary goal \\u2014 where do you want your story or career to be in the future?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"gs-sub\",\n          style: {\n            marginTop: 4\n          },\n          children: \"Dream big! We\\u2019ll help you create a personalized roadmap to turn your vision into reality.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"gs-card\",\n        style: {\n          maxWidth: 940\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            fontSize: 13,\n            fontWeight: 700,\n            marginBottom: 8\n          },\n          children: \"Your Main Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: goal,\n          onChange: e => setGoal(e.target.value),\n          rows: 3,\n          placeholder: \"Describe your main goal here...\",\n          style: {\n            width: '100%',\n            padding: '14px 12px',\n            border: '1px solid var(--border)',\n            borderRadius: 12,\n            background: '#fff',\n            fontSize: 14,\n            resize: 'vertical'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 16,\n          display: 'flex',\n          gap: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-outline\",\n          onClick: onGenerate,\n          disabled: loading,\n          children: loading ? 'Generating…' : 'Generate Checklist'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), roadmap && /*#__PURE__*/_jsxDEV(RoadmapChecklist, {\n        roadmap: roadmap,\n        checked: checked,\n        onToggle: onToggle,\n        onExport: onExport,\n        onImport: onImport\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gs-actions\",\n        style: {\n          marginTop: 24\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-outline\",\n          children: \"Save Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-primary\",\n          onClick: handleContinue,\n          disabled: loading,\n          title: loading ? 'Generating checklist…' : 'Go to Knowledge',\n          children: loading ? 'Preparing…' : 'Continue to Knowledge'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n}\n_s(AddGoals, \"JmXOpZxyG3mxHEmPghD4Jvq4kNA=\", false, function () {\n  return [useNavigate];\n});\n_c = AddGoals;\nvar _c;\n$RefreshReg$(_c, \"AddGoals\");","map":{"version":3,"names":["useState","useMemo","getRoadmap","RoadmapChecklist","useNavigate","Steps","jsxDEV","_jsxDEV","AddGoals","_s","navigate","goal","setGoal","loading","setLoading","roadmap","setRoadmap","checked","setChecked","hashGoal","s","h","i","length","charCodeAt","String","storageKey","trim","loadChecks","JSON","parse","localStorage","getItem","saveChecks","obj","setItem","stringify","generateAndPersist","g","Error","data","restored","onGenerate","e","alert","message","onToggle","id","next","onExport","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","download","href","click","revokeObjectURL","onImport","_e$target$files","file","target","files","text","handleContinue","className","children","active","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginTop","maxWidth","display","fontSize","fontWeight","marginBottom","value","onChange","rows","placeholder","width","padding","border","borderRadius","background","resize","gap","onClick","disabled","title","_c","$RefreshReg$"],"sources":["D:/Hackathon/hackathon-app/src/pages/AddGoals.js"],"sourcesContent":["// import { useState, useMemo } from 'react';\r\n// import { getRoadmap } from '../services/roadmapApi';\r\n// import RoadmapChecklist from '../components/RoadmapChecklist';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import Steps from '../components/Steps';\r\n\r\n// export default function AddGoals(){\r\n//   const navigate = useNavigate();\r\n//   const [goal, setGoal] = useState('Develop AI-powered interactive storytelling platform');\r\n\r\n//   const handleContinue = () => {\r\n//     // pass goal forward to the next step\r\n//     navigate('/add_goals/previous_knowledge', { state: { goal } });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"gs-page\">\r\n//       <main className=\"gs-container\">\r\n//         {/* Steps progress (Your Goal active) */}\r\n//         <Steps active={1} />\r\n\r\n//         {/* Title & subtitle */}\r\n//         <header className=\"gs-hero\">\r\n//           <h1>What’s Your <span style={{color:'var(--brand)'}}>Visionary Goal</span>?</h1>\r\n//           <p className=\"gs-sub\">Tell us your visionary goal — where do you want your story or career to be in the future?</p>\r\n//           <p className=\"gs-sub\" style={{marginTop:4}}>Dream big! We’ll help you create a personalized roadmap to turn your vision into reality.</p>\r\n//         </header>\r\n\r\n//         {/* Goal input card */}\r\n//         <section className=\"gs-card\" style={{maxWidth:940}}>\r\n//           <label style={{display:'block', fontSize:13, fontWeight:700, marginBottom:8}}>Your Main Goal</label>\r\n//           <textarea\r\n//             value={goal}\r\n//             onChange={(e)=> setGoal(e.target.value)}\r\n//             rows={3}\r\n//             placeholder=\"Describe your main goal here...\"\r\n//             style={{\r\n//               width:'100%', padding:'14px 12px', border:'1px solid var(--border)', borderRadius:12,\r\n//               background:'#fff', fontSize:14, resize:'vertical'\r\n//             }}\r\n//           />\r\n//         </section>\r\n\r\n//         {/* Actions */}\r\n//         <div className=\"gs-actions\" style={{marginTop:24}}>\r\n//           <button type=\"button\" className=\"btn-outline\">Save Draft</button>\r\n//           <button type=\"button\" className=\"btn-primary\" onClick={handleContinue}>\r\n//             Continue to Knowledge\r\n//           </button>\r\n//         </div>\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import { useState, useMemo } from 'react';\r\n// import { getRoadmap } from '../services/roadmapApi';\r\n// import RoadmapChecklist from '../components/RoadmapChecklist';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import Steps from '../components/Steps';\r\n\r\n// export default function AddGoals() {\r\n//   const navigate = useNavigate();\r\n\r\n//   // Goal 입력\r\n//   const [goal, setGoal] = useState('Develop AI-powered interactive storytelling platform');\r\n\r\n//   // AI Checklist 상태\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [roadmap, setRoadmap] = useState(null);\r\n//   const [checked, setChecked] = useState({});\r\n\r\n//   // 로컬 스토리지 키 생성\r\n//   function hashGoal(s) {\r\n//     let h = 0; for (let i = 0; i < s.length; i++) h = (h * 31 + s.charCodeAt(i)) | 0;\r\n//     return String(h);\r\n//   }\r\n//   const storageKey = useMemo(() => `roadmapChecks::${hashGoal(goal.trim())}`, [goal]);\r\n\r\n//   const loadChecks = () => {\r\n//     try { return JSON.parse(localStorage.getItem(storageKey) || '{}'); }\r\n//     catch { return {}; }\r\n//   };\r\n//   const saveChecks = (obj) => {\r\n//     localStorage.setItem(storageKey, JSON.stringify(obj));\r\n//   };\r\n\r\n//   // AI Checklist 생성\r\n//   const onGenerate = async () => {\r\n//     if (!goal.trim()) return;\r\n//     setLoading(true);\r\n//     try {\r\n//       const data = await getRoadmap(goal.trim());\r\n//       setRoadmap(data);\r\n//       setChecked(loadChecks());\r\n//     } catch (e) {\r\n//       alert(e.message);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // 체크 상태 토글\r\n//   const onToggle = (id) => {\r\n//     const next = { ...checked, [id]: !checked[id] };\r\n//     setChecked(next);\r\n//     saveChecks(next);\r\n//   };\r\n\r\n//   // Export / Import\r\n//   const onExport = () => {\r\n//     const blob = new Blob([JSON.stringify({ goal, roadmap, checked }, null, 2)], { type: 'application/json' });\r\n//     const url = URL.createObjectURL(blob);\r\n//     const a = document.createElement('a');\r\n//     a.download = `roadmap-${hashGoal(goal.trim())}.json`;\r\n//     a.href = url;\r\n//     a.click();\r\n//     URL.revokeObjectURL(url);\r\n//   };\r\n\r\n//   const onImport = async (e) => {\r\n//     const file = e.target.files?.[0];\r\n//     if (!file) return;\r\n//     const text = await file.text();\r\n//     try {\r\n//       const data = JSON.parse(text);\r\n//       if (!data.roadmap || !data.checked) throw new Error('Invalid file');\r\n//       setGoal(data.goal || '');\r\n//       setRoadmap(data.roadmap);\r\n//       setChecked(data.checked);\r\n//     } catch {\r\n//       alert('Invalid JSON file.');\r\n//     }\r\n//   };\r\n\r\n  \r\n//   const handleContinue = () => {\r\n//     navigate('/add_goals/previous_knowledge', {\r\n//       state: { goal, roadmap, checked }\r\n//      });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"gs-page\">\r\n//       <main className=\"gs-container\">\r\n//         {/* Steps progress (Your Goal active) */}\r\n//         <Steps active={1} />\r\n\r\n//         {/* Title & subtitle */}\r\n//         <header className=\"gs-hero\">\r\n//           <h1>What’s Your <span style={{color:'var(--brand)'}}>Visionary Goal</span>?</h1>\r\n//           <p className=\"gs-sub\">Tell us your visionary goal — where do you want your story or career to be in the future?</p>\r\n//           <p className=\"gs-sub\" style={{marginTop:4}}>Dream big! We’ll help you create a personalized roadmap to turn your vision into reality.</p>\r\n//         </header>\r\n\r\n//         {/* Goal input card */}\r\n//         <section className=\"gs-card\" style={{maxWidth:940}}>\r\n//           <label style={{display:'block', fontSize:13, fontWeight:700, marginBottom:8}}>Your Main Goal</label>\r\n//           <textarea\r\n//             value={goal}\r\n//             onChange={(e)=> setGoal(e.target.value)}\r\n//             rows={3}\r\n//             placeholder=\"Describe your main goal here...\"\r\n//             style={{\r\n//               width:'100%', padding:'14px 12px', border:'1px solid var(--border)', borderRadius:12,\r\n//               background:'#fff', fontSize:14, resize:'vertical'\r\n//             }}\r\n//           />\r\n//         </section>\r\n\r\n//         {/* AI Checklist Actions */}\r\n//         <div style={{ marginTop: 16, display: 'flex', gap: 8 }}>\r\n//           <button type=\"button\" className=\"btn-outline\" onClick={onGenerate} disabled={loading}>\r\n//             {loading ? 'Generating…' : 'Generate Checklist'}\r\n//           </button>\r\n//         </div>\r\n\r\n//         {roadmap && (\r\n//           <RoadmapChecklist\r\n//             roadmap={roadmap}\r\n//             checked={checked}\r\n//             onToggle={onToggle}\r\n//             onExport={onExport}\r\n//             onImport={onImport}\r\n//           />\r\n//         )}\r\n\r\n//         {/* Actions */}\r\n//         <div className=\"gs-actions\" style={{marginTop:24}}>\r\n//           <button type=\"button\" className=\"btn-outline\">Save Draft</button>\r\n//           <button type=\"button\" className=\"btn-primary\" onClick={handleContinue}>\r\n//             Continue to Knowledge\r\n//           </button>\r\n//         </div>\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport { useState, useMemo } from 'react';\r\nimport { getRoadmap } from '../services/roadmapApi';\r\nimport RoadmapChecklist from '../components/RoadmapChecklist';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Steps from '../components/Steps';\r\n\r\nexport default function AddGoals() {\r\n  const navigate = useNavigate();\r\n\r\n  const [goal, setGoal] = useState('Develop AI-powered interactive storytelling platform');\r\n  const [loading, setLoading] = useState(false);           // 생성 중 표시\r\n  const [roadmap, setRoadmap] = useState(null);\r\n  const [checked, setChecked] = useState({});\r\n\r\n  // goal 기반 로컬 스토리지 키\r\n  function hashGoal(s) {\r\n    let h = 0; for (let i = 0; i < s.length; i++) h = (h * 31 + s.charCodeAt(i)) | 0;\r\n    return String(h);\r\n  }\r\n  const storageKey = useMemo(() => `roadmapChecks::${hashGoal(goal.trim())}`, [goal]);\r\n\r\n  const loadChecks = () => {\r\n    try { return JSON.parse(localStorage.getItem(storageKey) || '{}'); }\r\n    catch { return {}; }\r\n  };\r\n  const saveChecks = (obj) => {\r\n    localStorage.setItem(storageKey, JSON.stringify(obj));\r\n  };\r\n\r\n  // 공통: 생성하고 상태/로컬스토리지까지 반영\r\n  const generateAndPersist = async () => {\r\n    const g = goal.trim();\r\n    if (!g) throw new Error('Please enter your goal.');\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRoadmap(g);\r\n      const restored = loadChecks();\r\n      setRoadmap(data);\r\n      setChecked(restored);\r\n      localStorage.setItem('lastRoadmap', JSON.stringify({\r\n        goal: g,\r\n        roadmap: data,\r\n        checked: restored,\r\n      }));\r\n      return data;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // (선택) 수동 생성 버튼 핸들러\r\n  const onGenerate = async () => {\r\n    try {\r\n      await generateAndPersist();\r\n    } catch (e) {\r\n      alert(e.message || 'Failed to generate.');\r\n    }\r\n  };\r\n\r\n  // 체크 토글 → 상태 & lastRoadmap 동기화\r\n  const onToggle = (id) => {\r\n    const next = { ...checked, [id]: !checked[id] };\r\n    setChecked(next);\r\n    saveChecks(next);\r\n    localStorage.setItem('lastRoadmap', JSON.stringify({\r\n      goal,\r\n      roadmap,\r\n      checked: next,\r\n    }));\r\n  };\r\n\r\n  // 내보내기/가져오기(선택)\r\n  const onExport = () => {\r\n    const blob = new Blob([JSON.stringify({ goal, roadmap, checked }, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.download = `roadmap-${hashGoal(goal.trim())}.json`;\r\n    a.href = url;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const onImport = async (e) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n    const text = await file.text();\r\n    try {\r\n      const data = JSON.parse(text);\r\n      if (!data.roadmap || !data.checked) throw new Error('Invalid file');\r\n      setGoal(data.goal || '');\r\n      setRoadmap(data.roadmap);\r\n      setChecked(data.checked);\r\n      localStorage.setItem('lastRoadmap', JSON.stringify(data));\r\n    } catch {\r\n      alert('Invalid JSON file.');\r\n    }\r\n  };\r\n\r\n  // ✅ 자동 생성 후 이동\r\n  const handleContinue = async () => {\r\n    try {\r\n      if (!roadmap) {\r\n        await generateAndPersist(); // 없으면 자동 생성\r\n      }\r\n      navigate('/add_goals/previous_knowledge'); // Knowledge 페이지\r\n    } catch (e) {\r\n      alert(e.message || 'Failed to generate checklist. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gs-page\">\r\n      <main className=\"gs-container\">\r\n        <Steps active={1} />\r\n\r\n        <header className=\"gs-hero\">\r\n          <h1>What’s Your <span style={{color:'var(--brand)'}}>Visionary Goal</span>?</h1>\r\n          <p className=\"gs-sub\">Tell us your visionary goal — where do you want your story or career to be in the future?</p>\r\n          <p className=\"gs-sub\" style={{marginTop:4}}>Dream big! We’ll help you create a personalized roadmap to turn your vision into reality.</p>\r\n        </header>\r\n\r\n        <section className=\"gs-card\" style={{maxWidth:940}}>\r\n          <label style={{display:'block', fontSize:13, fontWeight:700, marginBottom:8}}>Your Main Goal</label>\r\n          <textarea\r\n            value={goal}\r\n            onChange={(e)=> setGoal(e.target.value)}\r\n            rows={3}\r\n            placeholder=\"Describe your main goal here...\"\r\n            style={{\r\n              width:'100%', padding:'14px 12px', border:'1px solid var(--border)', borderRadius:12,\r\n              background:'#fff', fontSize:14, resize:'vertical'\r\n            }}\r\n          />\r\n        </section>\r\n\r\n        {/* (선택) 수동 생성 버튼 – 유지하거나 지워도 됩니다 */}\r\n        <div style={{ marginTop: 16, display: 'flex', gap: 8 }}>\r\n          <button type=\"button\" className=\"btn-outline\" onClick={onGenerate} disabled={loading}>\r\n            {loading ? 'Generating…' : 'Generate Checklist'}\r\n          </button>\r\n        </div>\r\n\r\n        {roadmap && (\r\n          <RoadmapChecklist\r\n            roadmap={roadmap}\r\n            checked={checked}\r\n            onToggle={onToggle}\r\n            onExport={onExport}\r\n            onImport={onImport}\r\n          />\r\n        )}\r\n\r\n        <div className=\"gs-actions\" style={{marginTop:24}}>\r\n          <button type=\"button\" className=\"btn-outline\">Save Draft</button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-primary\"\r\n            onClick={handleContinue}\r\n            disabled={loading}\r\n            title={loading ? 'Generating checklist…' : 'Go to Knowledge'}\r\n          >\r\n            {loading ? 'Preparing…' : 'Continue to Knowledge'}\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACzC,SAASC,UAAU,QAAQ,wBAAwB;AACnD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}