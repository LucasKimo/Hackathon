{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hackathon\\\\hackathon-app\\\\src\\\\pages\\\\AddGoals.js\",\n  _s = $RefreshSig$();\n// import { useState, useMemo } from 'react';\n// import { getRoadmap } from '../services/roadmapApi';\n// import RoadmapChecklist from '../components/RoadmapChecklist';\n// import { useNavigate } from 'react-router-dom';\n// import Steps from '../components/Steps';\n\n// export default function AddGoals(){\n//   const navigate = useNavigate();\n//   const [goal, setGoal] = useState('Develop AI-powered interactive storytelling platform');\n\n//   const handleContinue = () => {\n//     // pass goal forward to the next step\n//     navigate('/add_goals/previous_knowledge', { state: { goal } });\n//   };\n\n//   return (\n//     <div className=\"gs-page\">\n//       <main className=\"gs-container\">\n//         {/* Steps progress (Your Goal active) */}\n//         <Steps active={1} />\n\n//         {/* Title & subtitle */}\n//         <header className=\"gs-hero\">\n//           <h1>What’s Your <span style={{color:'var(--brand)'}}>Visionary Goal</span>?</h1>\n//           <p className=\"gs-sub\">Tell us your visionary goal — where do you want your story or career to be in the future?</p>\n//           <p className=\"gs-sub\" style={{marginTop:4}}>Dream big! We’ll help you create a personalized roadmap to turn your vision into reality.</p>\n//         </header>\n\n//         {/* Goal input card */}\n//         <section className=\"gs-card\" style={{maxWidth:940}}>\n//           <label style={{display:'block', fontSize:13, fontWeight:700, marginBottom:8}}>Your Main Goal</label>\n//           <textarea\n//             value={goal}\n//             onChange={(e)=> setGoal(e.target.value)}\n//             rows={3}\n//             placeholder=\"Describe your main goal here...\"\n//             style={{\n//               width:'100%', padding:'14px 12px', border:'1px solid var(--border)', borderRadius:12,\n//               background:'#fff', fontSize:14, resize:'vertical'\n//             }}\n//           />\n//         </section>\n\n//         {/* Actions */}\n//         <div className=\"gs-actions\" style={{marginTop:24}}>\n//           <button type=\"button\" className=\"btn-outline\">Save Draft</button>\n//           <button type=\"button\" className=\"btn-primary\" onClick={handleContinue}>\n//             Continue to Knowledge\n//           </button>\n//         </div>\n//       </main>\n//     </div>\n//   );\n// }\n\n// import { useState, useMemo } from 'react';\n// import { getRoadmap } from '../services/roadmapApi';\n// import RoadmapChecklist from '../components/RoadmapChecklist';\n// import { useNavigate } from 'react-router-dom';\n// import Steps from '../components/Steps';\n\n// export default function AddGoals() {\n//   const navigate = useNavigate();\n\n//   // Goal 입력\n//   const [goal, setGoal] = useState('Develop AI-powered interactive storytelling platform');\n\n//   // AI Checklist 상태\n//   const [loading, setLoading] = useState(false);\n//   const [roadmap, setRoadmap] = useState(null);\n//   const [checked, setChecked] = useState({});\n\n//   // 로컬 스토리지 키 생성\n//   function hashGoal(s) {\n//     let h = 0; for (let i = 0; i < s.length; i++) h = (h * 31 + s.charCodeAt(i)) | 0;\n//     return String(h);\n//   }\n//   const storageKey = useMemo(() => `roadmapChecks::${hashGoal(goal.trim())}`, [goal]);\n\n//   const loadChecks = () => {\n//     try { return JSON.parse(localStorage.getItem(storageKey) || '{}'); }\n//     catch { return {}; }\n//   };\n//   const saveChecks = (obj) => {\n//     localStorage.setItem(storageKey, JSON.stringify(obj));\n//   };\n\n//   // AI Checklist 생성\n//   const onGenerate = async () => {\n//     if (!goal.trim()) return;\n//     setLoading(true);\n//     try {\n//       const data = await getRoadmap(goal.trim());\n//       setRoadmap(data);\n//       setChecked(loadChecks());\n//     } catch (e) {\n//       alert(e.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // 체크 상태 토글\n//   const onToggle = (id) => {\n//     const next = { ...checked, [id]: !checked[id] };\n//     setChecked(next);\n//     saveChecks(next);\n//   };\n\n//   // Export / Import\n//   const onExport = () => {\n//     const blob = new Blob([JSON.stringify({ goal, roadmap, checked }, null, 2)], { type: 'application/json' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.download = `roadmap-${hashGoal(goal.trim())}.json`;\n//     a.href = url;\n//     a.click();\n//     URL.revokeObjectURL(url);\n//   };\n\n//   const onImport = async (e) => {\n//     const file = e.target.files?.[0];\n//     if (!file) return;\n//     const text = await file.text();\n//     try {\n//       const data = JSON.parse(text);\n//       if (!data.roadmap || !data.checked) throw new Error('Invalid file');\n//       setGoal(data.goal || '');\n//       setRoadmap(data.roadmap);\n//       setChecked(data.checked);\n//     } catch {\n//       alert('Invalid JSON file.');\n//     }\n//   };\n\n//   const handleContinue = () => {\n//     navigate('/add_goals/previous_knowledge', {\n//       state: { goal, roadmap, checked }\n//      });\n//   };\n\n//   return (\n//     <div className=\"gs-page\">\n//       <main className=\"gs-container\">\n//         {/* Steps progress (Your Goal active) */}\n//         <Steps active={1} />\n\n//         {/* Title & subtitle */}\n//         <header className=\"gs-hero\">\n//           <h1>What’s Your <span style={{color:'var(--brand)'}}>Visionary Goal</span>?</h1>\n//           <p className=\"gs-sub\">Tell us your visionary goal — where do you want your story or career to be in the future?</p>\n//           <p className=\"gs-sub\" style={{marginTop:4}}>Dream big! We’ll help you create a personalized roadmap to turn your vision into reality.</p>\n//         </header>\n\n//         {/* Goal input card */}\n//         <section className=\"gs-card\" style={{maxWidth:940}}>\n//           <label style={{display:'block', fontSize:13, fontWeight:700, marginBottom:8}}>Your Main Goal</label>\n//           <textarea\n//             value={goal}\n//             onChange={(e)=> setGoal(e.target.value)}\n//             rows={3}\n//             placeholder=\"Describe your main goal here...\"\n//             style={{\n//               width:'100%', padding:'14px 12px', border:'1px solid var(--border)', borderRadius:12,\n//               background:'#fff', fontSize:14, resize:'vertical'\n//             }}\n//           />\n//         </section>\n\n//         {/* AI Checklist Actions */}\n//         <div style={{ marginTop: 16, display: 'flex', gap: 8 }}>\n//           <button type=\"button\" className=\"btn-outline\" onClick={onGenerate} disabled={loading}>\n//             {loading ? 'Generating…' : 'Generate Checklist'}\n//           </button>\n//         </div>\n\n//         {roadmap && (\n//           <RoadmapChecklist\n//             roadmap={roadmap}\n//             checked={checked}\n//             onToggle={onToggle}\n//             onExport={onExport}\n//             onImport={onImport}\n//           />\n//         )}\n\n//         {/* Actions */}\n//         <div className=\"gs-actions\" style={{marginTop:24}}>\n//           <button type=\"button\" className=\"btn-outline\">Save Draft</button>\n//           <button type=\"button\" className=\"btn-primary\" onClick={handleContinue}>\n//             Continue to Knowledge\n//           </button>\n//         </div>\n//       </main>\n//     </div>\n//   );\n// }\n\nimport { useState, useMemo } from 'react';\nimport { getRoadmap } from '../services/roadmapApi';\nimport { useNavigate } from 'react-router-dom';\nimport Steps from '../components/Steps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddGoals() {\n  _s();\n  const navigate = useNavigate();\n  const [goal, setGoal] = useState('Develop AI-powered interactive storytelling platform');\n  const [loading, setLoading] = useState(false); // 생성/이동 중 버튼 비활성화용\n\n  // goal 기반 로컬 스토리지 키 (체크 상태 저장용)\n  function hashGoal(s) {\n    let h = 0;\n    for (let i = 0; i < s.length; i++) h = h * 31 + s.charCodeAt(i) | 0;\n    return String(h);\n  }\n  const storageKey = useMemo(() => `roadmapChecks::${hashGoal(goal.trim())}`, [goal]);\n  const loadChecks = () => {\n    try {\n      return JSON.parse(localStorage.getItem(storageKey) || '{}');\n    } catch {\n      return {};\n    }\n  };\n\n  // ✅ Continue 클릭 시: 자동 생성 → localStorage 저장 → Knowledge로 이동\n  const handleContinue = async () => {\n    const g = goal.trim();\n    if (!g) {\n      alert('Please enter your goal.');\n      return;\n    }\n    setLoading(true);\n    try {\n      // AI로 체크리스트 생성\n      const roadmap = await getRoadmap(g);\n      const checked = loadChecks(); // 같은 목표로 이전 체크 내역이 있으면 복원\n\n      // Knowledge 페이지에서 사용할 데이터 저장\n      localStorage.setItem('lastRoadmap', JSON.stringify({\n        goal: g,\n        roadmap,\n        checked\n      }));\n\n      // 다음 페이지로 이동\n      navigate('/add_goals/previous_knowledge');\n    } catch (e) {\n      alert(e.message || 'Failed to generate checklist. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gs-page\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"gs-container\",\n      children: [/*#__PURE__*/_jsxDEV(Steps, {\n        active: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"gs-hero\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"What\\u2019s Your \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'var(--brand)'\n            },\n            children: \"Visionary Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 27\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"gs-sub\",\n          children: \"Tell us your visionary goal \\u2014 where do you want your story or career to be in the future?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"gs-sub\",\n          style: {\n            marginTop: 4\n          },\n          children: \"Dream big! We\\u2019ll help you create a personalized roadmap to turn your vision into reality.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"gs-card\",\n        style: {\n          maxWidth: 940\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            fontSize: 13,\n            fontWeight: 700,\n            marginBottom: 8\n          },\n          children: \"Your Main Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: goal,\n          onChange: e => setGoal(e.target.value),\n          rows: 3,\n          placeholder: \"Describe your main goal here...\",\n          style: {\n            width: '100%',\n            padding: '14px 12px',\n            border: '1px solid var(--border)',\n            borderRadius: 12,\n            background: '#fff',\n            fontSize: 14,\n            resize: 'vertical'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gs-actions\",\n        style: {\n          marginTop: 24\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-outline\",\n          disabled: loading,\n          children: \"Save Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-primary\",\n          onClick: handleContinue,\n          disabled: loading,\n          title: loading ? 'Generating checklist…' : 'Go to Knowledge',\n          children: loading ? 'Preparing…' : 'Continue to Knowledge'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n}\n_s(AddGoals, \"tctK+QFRP/EB+GagERa828pyL4M=\", false, function () {\n  return [useNavigate];\n});\n_c = AddGoals;\nvar _c;\n$RefreshReg$(_c, \"AddGoals\");","map":{"version":3,"names":["useState","useMemo","getRoadmap","useNavigate","Steps","jsxDEV","_jsxDEV","AddGoals","_s","navigate","goal","setGoal","loading","setLoading","hashGoal","s","h","i","length","charCodeAt","String","storageKey","trim","loadChecks","JSON","parse","localStorage","getItem","handleContinue","g","alert","roadmap","checked","setItem","stringify","e","message","className","children","active","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginTop","maxWidth","display","fontSize","fontWeight","marginBottom","value","onChange","target","rows","placeholder","width","padding","border","borderRadius","background","resize","type","disabled","onClick","title","_c","$RefreshReg$"],"sources":["D:/Hackathon/hackathon-app/src/pages/AddGoals.js"],"sourcesContent":["// import { useState, useMemo } from 'react';\r\n// import { getRoadmap } from '../services/roadmapApi';\r\n// import RoadmapChecklist from '../components/RoadmapChecklist';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import Steps from '../components/Steps';\r\n\r\n// export default function AddGoals(){\r\n//   const navigate = useNavigate();\r\n//   const [goal, setGoal] = useState('Develop AI-powered interactive storytelling platform');\r\n\r\n//   const handleContinue = () => {\r\n//     // pass goal forward to the next step\r\n//     navigate('/add_goals/previous_knowledge', { state: { goal } });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"gs-page\">\r\n//       <main className=\"gs-container\">\r\n//         {/* Steps progress (Your Goal active) */}\r\n//         <Steps active={1} />\r\n\r\n//         {/* Title & subtitle */}\r\n//         <header className=\"gs-hero\">\r\n//           <h1>What’s Your <span style={{color:'var(--brand)'}}>Visionary Goal</span>?</h1>\r\n//           <p className=\"gs-sub\">Tell us your visionary goal — where do you want your story or career to be in the future?</p>\r\n//           <p className=\"gs-sub\" style={{marginTop:4}}>Dream big! We’ll help you create a personalized roadmap to turn your vision into reality.</p>\r\n//         </header>\r\n\r\n//         {/* Goal input card */}\r\n//         <section className=\"gs-card\" style={{maxWidth:940}}>\r\n//           <label style={{display:'block', fontSize:13, fontWeight:700, marginBottom:8}}>Your Main Goal</label>\r\n//           <textarea\r\n//             value={goal}\r\n//             onChange={(e)=> setGoal(e.target.value)}\r\n//             rows={3}\r\n//             placeholder=\"Describe your main goal here...\"\r\n//             style={{\r\n//               width:'100%', padding:'14px 12px', border:'1px solid var(--border)', borderRadius:12,\r\n//               background:'#fff', fontSize:14, resize:'vertical'\r\n//             }}\r\n//           />\r\n//         </section>\r\n\r\n//         {/* Actions */}\r\n//         <div className=\"gs-actions\" style={{marginTop:24}}>\r\n//           <button type=\"button\" className=\"btn-outline\">Save Draft</button>\r\n//           <button type=\"button\" className=\"btn-primary\" onClick={handleContinue}>\r\n//             Continue to Knowledge\r\n//           </button>\r\n//         </div>\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import { useState, useMemo } from 'react';\r\n// import { getRoadmap } from '../services/roadmapApi';\r\n// import RoadmapChecklist from '../components/RoadmapChecklist';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import Steps from '../components/Steps';\r\n\r\n// export default function AddGoals() {\r\n//   const navigate = useNavigate();\r\n\r\n//   // Goal 입력\r\n//   const [goal, setGoal] = useState('Develop AI-powered interactive storytelling platform');\r\n\r\n//   // AI Checklist 상태\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [roadmap, setRoadmap] = useState(null);\r\n//   const [checked, setChecked] = useState({});\r\n\r\n//   // 로컬 스토리지 키 생성\r\n//   function hashGoal(s) {\r\n//     let h = 0; for (let i = 0; i < s.length; i++) h = (h * 31 + s.charCodeAt(i)) | 0;\r\n//     return String(h);\r\n//   }\r\n//   const storageKey = useMemo(() => `roadmapChecks::${hashGoal(goal.trim())}`, [goal]);\r\n\r\n//   const loadChecks = () => {\r\n//     try { return JSON.parse(localStorage.getItem(storageKey) || '{}'); }\r\n//     catch { return {}; }\r\n//   };\r\n//   const saveChecks = (obj) => {\r\n//     localStorage.setItem(storageKey, JSON.stringify(obj));\r\n//   };\r\n\r\n//   // AI Checklist 생성\r\n//   const onGenerate = async () => {\r\n//     if (!goal.trim()) return;\r\n//     setLoading(true);\r\n//     try {\r\n//       const data = await getRoadmap(goal.trim());\r\n//       setRoadmap(data);\r\n//       setChecked(loadChecks());\r\n//     } catch (e) {\r\n//       alert(e.message);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // 체크 상태 토글\r\n//   const onToggle = (id) => {\r\n//     const next = { ...checked, [id]: !checked[id] };\r\n//     setChecked(next);\r\n//     saveChecks(next);\r\n//   };\r\n\r\n//   // Export / Import\r\n//   const onExport = () => {\r\n//     const blob = new Blob([JSON.stringify({ goal, roadmap, checked }, null, 2)], { type: 'application/json' });\r\n//     const url = URL.createObjectURL(blob);\r\n//     const a = document.createElement('a');\r\n//     a.download = `roadmap-${hashGoal(goal.trim())}.json`;\r\n//     a.href = url;\r\n//     a.click();\r\n//     URL.revokeObjectURL(url);\r\n//   };\r\n\r\n//   const onImport = async (e) => {\r\n//     const file = e.target.files?.[0];\r\n//     if (!file) return;\r\n//     const text = await file.text();\r\n//     try {\r\n//       const data = JSON.parse(text);\r\n//       if (!data.roadmap || !data.checked) throw new Error('Invalid file');\r\n//       setGoal(data.goal || '');\r\n//       setRoadmap(data.roadmap);\r\n//       setChecked(data.checked);\r\n//     } catch {\r\n//       alert('Invalid JSON file.');\r\n//     }\r\n//   };\r\n\r\n  \r\n//   const handleContinue = () => {\r\n//     navigate('/add_goals/previous_knowledge', {\r\n//       state: { goal, roadmap, checked }\r\n//      });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"gs-page\">\r\n//       <main className=\"gs-container\">\r\n//         {/* Steps progress (Your Goal active) */}\r\n//         <Steps active={1} />\r\n\r\n//         {/* Title & subtitle */}\r\n//         <header className=\"gs-hero\">\r\n//           <h1>What’s Your <span style={{color:'var(--brand)'}}>Visionary Goal</span>?</h1>\r\n//           <p className=\"gs-sub\">Tell us your visionary goal — where do you want your story or career to be in the future?</p>\r\n//           <p className=\"gs-sub\" style={{marginTop:4}}>Dream big! We’ll help you create a personalized roadmap to turn your vision into reality.</p>\r\n//         </header>\r\n\r\n//         {/* Goal input card */}\r\n//         <section className=\"gs-card\" style={{maxWidth:940}}>\r\n//           <label style={{display:'block', fontSize:13, fontWeight:700, marginBottom:8}}>Your Main Goal</label>\r\n//           <textarea\r\n//             value={goal}\r\n//             onChange={(e)=> setGoal(e.target.value)}\r\n//             rows={3}\r\n//             placeholder=\"Describe your main goal here...\"\r\n//             style={{\r\n//               width:'100%', padding:'14px 12px', border:'1px solid var(--border)', borderRadius:12,\r\n//               background:'#fff', fontSize:14, resize:'vertical'\r\n//             }}\r\n//           />\r\n//         </section>\r\n\r\n//         {/* AI Checklist Actions */}\r\n//         <div style={{ marginTop: 16, display: 'flex', gap: 8 }}>\r\n//           <button type=\"button\" className=\"btn-outline\" onClick={onGenerate} disabled={loading}>\r\n//             {loading ? 'Generating…' : 'Generate Checklist'}\r\n//           </button>\r\n//         </div>\r\n\r\n//         {roadmap && (\r\n//           <RoadmapChecklist\r\n//             roadmap={roadmap}\r\n//             checked={checked}\r\n//             onToggle={onToggle}\r\n//             onExport={onExport}\r\n//             onImport={onImport}\r\n//           />\r\n//         )}\r\n\r\n//         {/* Actions */}\r\n//         <div className=\"gs-actions\" style={{marginTop:24}}>\r\n//           <button type=\"button\" className=\"btn-outline\">Save Draft</button>\r\n//           <button type=\"button\" className=\"btn-primary\" onClick={handleContinue}>\r\n//             Continue to Knowledge\r\n//           </button>\r\n//         </div>\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport { useState, useMemo } from 'react';\r\nimport { getRoadmap } from '../services/roadmapApi';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Steps from '../components/Steps';\r\n\r\nexport default function AddGoals() {\r\n  const navigate = useNavigate();\r\n\r\n  const [goal, setGoal] = useState('Develop AI-powered interactive storytelling platform');\r\n  const [loading, setLoading] = useState(false);   // 생성/이동 중 버튼 비활성화용\r\n\r\n  // goal 기반 로컬 스토리지 키 (체크 상태 저장용)\r\n  function hashGoal(s) {\r\n    let h = 0; for (let i = 0; i < s.length; i++) h = (h * 31 + s.charCodeAt(i)) | 0;\r\n    return String(h);\r\n  }\r\n  const storageKey = useMemo(() => `roadmapChecks::${hashGoal(goal.trim())}`, [goal]);\r\n\r\n  const loadChecks = () => {\r\n    try { return JSON.parse(localStorage.getItem(storageKey) || '{}'); }\r\n    catch { return {}; }\r\n  };\r\n\r\n  // ✅ Continue 클릭 시: 자동 생성 → localStorage 저장 → Knowledge로 이동\r\n  const handleContinue = async () => {\r\n    const g = goal.trim();\r\n    if (!g) {\r\n      alert('Please enter your goal.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      // AI로 체크리스트 생성\r\n      const roadmap = await getRoadmap(g);\r\n      const checked = loadChecks(); // 같은 목표로 이전 체크 내역이 있으면 복원\r\n\r\n      // Knowledge 페이지에서 사용할 데이터 저장\r\n      localStorage.setItem('lastRoadmap', JSON.stringify({ goal: g, roadmap, checked }));\r\n\r\n      // 다음 페이지로 이동\r\n      navigate('/add_goals/previous_knowledge');\r\n    } catch (e) {\r\n      alert(e.message || 'Failed to generate checklist. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gs-page\">\r\n      <main className=\"gs-container\">\r\n        <Steps active={1} />\r\n\r\n        <header className=\"gs-hero\">\r\n          <h1>What’s Your <span style={{color:'var(--brand)'}}>Visionary Goal</span>?</h1>\r\n          <p className=\"gs-sub\">Tell us your visionary goal — where do you want your story or career to be in the future?</p>\r\n          <p className=\"gs-sub\" style={{marginTop:4}}>Dream big! We’ll help you create a personalized roadmap to turn your vision into reality.</p>\r\n        </header>\r\n\r\n        <section className=\"gs-card\" style={{maxWidth:940}}>\r\n          <label style={{display:'block', fontSize:13, fontWeight:700, marginBottom:8}}>Your Main Goal</label>\r\n          <textarea\r\n            value={goal}\r\n            onChange={(e)=> setGoal(e.target.value)}\r\n            rows={3}\r\n            placeholder=\"Describe your main goal here...\"\r\n            style={{\r\n              width:'100%', padding:'14px 12px', border:'1px solid var(--border)', borderRadius:12,\r\n              background:'#fff', fontSize:14, resize:'vertical'\r\n            }}\r\n          />\r\n        </section>\r\n\r\n        {/* Generate 버튼/체크리스트 렌더링은 제거됨 */}\r\n\r\n        <div className=\"gs-actions\" style={{marginTop:24}}>\r\n\r\n          <button type=\"button\" className=\"btn-outline\" disabled={loading}>Save Draft</button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-primary\"\r\n            onClick={handleContinue}\r\n            disabled={loading}\r\n            title={loading ? 'Generating checklist…' : 'Go to Knowledge'}\r\n          >\r\n            {loading ? 'Preparing…' : 'Continue to Knowledge'}\r\n\r\n\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACzC,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,sDAAsD,CAAC;EACxF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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}